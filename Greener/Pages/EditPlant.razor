@using Greener.Models;


<EditForm class="editPlant" EditContext="@editContext" OnSubmit="@HandleValidSubmition">
	<div>
		<label for="Name">Name
		<InputText class="inpTxt" id="name" @bind-Value="@PlantEdit.Name"></InputText>
		</label>
	</div>
	<div>
		<label for="LatinName">LatinName
		<InputText class="inpTxt" id="latinName" @bind-Value="@PlantEdit.LatinName"></InputText>
		</label>
	</div>
	<div>
		<label for="SoilType">SoilType
		<InputText class="inpTxt" id="soilType" @bind-Value="@PlantEdit.SoilType"></InputText>
		</label>
	</div>
	<div>
		<label>Obtained
			<InputDate class="inpTxt" id="date" @bind-Value="obtainedDate"></InputDate>
		</label>
	</div>
	@foreach (string date in PlantEdit.Watered)
	{
		<div>@date</div> <button onclick="@HandleDateDelete"> Delete </button>
	}

</EditForm>


@code {
	private DateTime obtainedDate { get; set; }
	private EditContext? editContext;
	[ParameterAttribute]
	public Plant PlantEdit { get; set; }
	//public EventCallback <Plant> PlantChanged { get; set; }
	protected bool IsShown { get; set; } = true;
	protected override async Task OnInitializedAsync ( )
	{
		//await PlantChanged.InvokeAsync();
		editContext = new(PlantEdit);
	}
	public void HandleValidSubmition()
	{

	}
	public void HandleDateDelete()
	{
		
	}

}